# -*- mode: ruby -*-
# vi: set ft=ruby :

VAGRANTFILE_API_VERSION = "2"
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

    config.ssh.insert_key = false

    (1..2).each do |id|
        re_name  = ( "vqfx" + id.to_s ).to_sym
        cumulus_name  = ( "vx" + id.to_s ).to_sym
        srv_name  = ( "srv" + id.to_s ).to_sym

        ##########################
        ## Routing Engine  #######
        ##########################

        if id == 1 

            config.vm.define re_name do |vqfx|
                vqfx.vm.hostname = "vqfx#{id}"
                vqfx.vm.box = 'juniper/vqfx10k-re'
                # DO NOT REMOVE / NO VMtools installed
                vqfx.vm.synced_folder '.', '/vagrant', disabled: true

                # Management port (em1 / em2)
                vqfx.vm.network 'private_network', auto_config: false, nic_type: '82540EM', virtualbox__intnet: "vqfx_internal_#{id}"
                vqfx.vm.network 'private_network', auto_config: false, nic_type: '82540EM', virtualbox__intnet: "reserved-bridge"

                # Dataplane ports (em3)
                vqfx.vm.network 'private_network', auto_config: false, nic_type: '82540EM', virtualbox__intnet: "server_vqfx#{id}"

                # (em4, em5)
                (1..2).each do |seg_id|
                    vqfx.vm.network 'private_network', auto_config: false, nic_type: '82540EM', virtualbox__intnet: "seg#{seg_id}"
                end
            end

        else 

            config.vm.define cumulus_name do |vx|
                vx.vm.hostname = "vx#{id}"
                vx.vm.box = 'CumulusCommunity/cumulus-vx'
                # DO NOT REMOVE / NO VMtools installed
                vx.vm.synced_folder '.', '/vagrant', disabled: true

                # Management port (em1 / em2)
                vx.vm.network 'private_network', auto_config: false, nic_type: '82540EM', virtualbox__intnet: "vx_internal_#{id}"
                vx.vm.network 'private_network', auto_config: false, nic_type: '82540EM', virtualbox__intnet: "reserved-bridge"

                # Dataplane ports (em3)
                vx.vm.network 'private_network', auto_config: false, nic_type: '82540EM', virtualbox__intnet: "server_vx#{id}"

                # (em4, em5)
                (1..2).each do |seg_id|
                    vx.vm.network 'private_network', auto_config: false, nic_type: '82540EM', virtualbox__intnet: "seg#{seg_id}"
                end
            end
        end


        ##########################
        ## Server          #######
        ##########################
        config.vm.define srv_name do |srv|
            srv.vm.box = "robwc/minitrusty64"
            srv.vm.hostname = "server#{id}"
            srv.vm.network 'private_network', ip: "10.10.#{id}.2", virtualbox__intnet: "server_vqfx#{id}"
            srv.ssh.insert_key = true
            srv.vm.provision "shell",
               inline: "sudo route add -net 10.10.0.0 netmask 255.255.0.0 gw 10.10.#{id}.1"
        end
    end

    ##############################
    ## Box provisioning    #######
    ##############################
    if !Vagrant::Util::Platform.windows?
        config.vm.provision "ansible" do |ansible|
            ansible.groups = {
                "vqfx10k" => ["vqfx1" ],
                "vx" => ["vx2" ],
                "server"  => ["server1", "server2" ],
                "all:children" => ["vqfx10k", "vx", "server"]
            }
            ansible.playbook = "provisioning/deploy-config.p.yaml"
        end
    end
end
